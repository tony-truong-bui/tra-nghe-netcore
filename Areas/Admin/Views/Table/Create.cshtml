@model TraNgheCore.Models.TableModel

@{
    Layout = "_Layout";
    ViewBag.Title = "Create New Table";
    var tables = ViewBag.Tables as List<TraNgheCore.Models.TableModel>;
}


<h2>Create New Table</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal mb-3">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @* <div class="form-group"> *@
        @*     @Html.LabelFor(m => m.Id, htmlAttributes: new { @class = "control-label col-md-2" }) *@
        @*     <div class="col-md-10"> *@
        @*         @Html.TextBoxFor(m => m.Id, new { @class = "form-control" }) *@
        @*         @Html.ValidationMessageFor(m => m.Id, "", new { @class = "text-danger" }) *@
        @*     </div> *@
        @* </div> *@
        <div class="form-group mb-3">
            @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group mb-3">
            @Html.LabelFor(m => m.IsAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.IsAvailable, new List<SelectListItem>
                {
                    new SelectListItem { Text = "Available", Value = "true" },
                    new SelectListItem { Text = "Not Available", Value = "false" }
                }, new { @class = "form-select" })
                @Html.ValidationMessageFor(m => m.IsAvailable, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group mb-3">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Table" class="btn btn-primary" />
            </div>
        </div>
    </div>
}


@if (tables != null && tables.Any())
{
    <h3>Existing Tables</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Is Available</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var table in tables)
            {
                <tr class="table-row-@table.Id">
                    <td>@table.Id</td>
                    <td>
                        <input id="name-input-@table.Id" class="form-control" value="@table.Name" type="text" />
                    </td>
                    <td>
                        <select id="is-available-input-@table.Id" class="form-select">
                            <option value="true" @(table.IsAvailable ? "selected" : "")>Available</option>
                            <option value="false" @(!table.IsAvailable ? "selected" : "")>Not Available</option>
                        </select>

                    </td>
                    <td>
                        <button class="btn btn-success btn-sm update-table"
                                data-id="@table.Id"
                                type="button">
                            Update
                        </button>
                        |

                        @*@Html.ActionLink("Delete", "Delete", new { id = category.Id }, new { onclick = "return confirm('Are you sure you want to delete this category?');" })*@

                        <button class="btn btn-danger btn-sm delete-table"
                                data-id="@table.Id"
                                type="button">
                            Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}



@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(function () {
            $('.delete-table').on('click', function () {
                var id = $(this).data('id');
                if (confirm('Are you sure you want to delete this table?')) {
                    $.post('/Admin/Table/AjaxDelete', { id: id }, function (response) {
                        if (response.success) {
                            $('.table-row-' + id).fadeOut(300, function () { $(this).remove(); });
                            alert('Table deleted successfully.');
                        } else {
                            alert('Error deleting table: ' + response.message);
                        }
                    });
                }
            });
        });

    </script>

    <script>
        $(function () {
            $('.update-table').on('click', function () {
                var id = $(this).data('id');
                var name = $('#name-input-' + id).val();
                var isAvailable = $('#is-available-input-' + id).val();
                $.post('/Admin/Table/AjaxUpdate', { id: id, name: name, isAvailable: isAvailable }, function (response) {
                    if (response.success) {
                        alert('Table updated successfully.');
                    } else {
                        alert('Error updating table: ' + response.message);
                    }
                });
            });
        })
    </script>


}


