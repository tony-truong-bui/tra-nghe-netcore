@model TraNgheCore.Models.CategoryModel


@{
    Layout = "_Layout";
    ViewBag.Title = "Create New Category";

    var categories = ViewBag.Categories as List<TraNgheCore.Models.CategoryModel>;
}


<h2>Create New Category</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Category" class="btn btn-primary" />
            </div>
        </div>
    </div>

}




@if (categories != null && categories.Any())
{
    <h3>Existing Categories</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Category Id</th>
                <th>Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in categories)
            {
                <tr id="category-row-@category.Id">
                    <td>@category.Id</td>
                    <td>
                        <input type="text" value="@category.Name" id="name-input-@category.Id" class="form-control" />
                    </td>
                    <td>
                        @*@Html.ActionLink("Edit", "Edit", new { id = category.Id }) |*@
                        <button class="btn btn-success btn-sm update-category"
                                data-id="@category.Id"
                                type="button">
                            Update
                        </button>
                         |
                       
                        @*@Html.ActionLink("Delete", "Delete", new { id = category.Id }, new { onclick = "return confirm('Are you sure you want to delete this category?');" })*@

                        <button class="btn btn-danger btn-sm delete-category"
                                data-id="@category.Id"
                                type="button">
                            Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
        }
    </table>
}
else
{
    <p>No categories available.</p>
}


@section scripts {

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
$(function() {
    $('.delete-category').click(function () {
        var button = $(this);
        var id = button.data('id');
        if (confirm('Are you sure you want to delete this category?')) {
            $.ajax({
                url: '@Url.Action("AjaxDelete", "Category")', // The server endpoint for deletion
                type: 'POST',   // Data sent to the server (category ID)
                data: { id: id }, // Ensure the ID is sent correctly

                // If the server responds with success, remove the row from the table
                success: function (response) {
                    if (response.success) {
                        $('#category-row-' + id).fadeOut(300, function() { $(this).remove(); });
                    } else {
                        alert(response.message || 'Delete failed.');
                    }   
                },

                // If the AJAX request itself fails, show a generic error
                error: function () {
                    alert('An error occurred while deleting.');
                }
            });
        }
    });
});
    </script>

    <script>
$(function() {
    $('.update-category').click(function () {
        var button = $(this);
        var id = button.data('id');
        var name = $('#name-input-' + id).val();
        if (name.trim() === "") {
            alert("Category name cannot be empty.");
            return;
        }
        $.ajax({
            url: '@Url.Action("AjaxUpdate", "Category")',
            type: 'POST',
            data: { id: id, name: name },
            success: function (response) {
                if (response.success) {
                    alert('Category updated successfully.');
                } else {
                    alert(response.message || 'Update failed.');
                }
            },
            error: function () {
                alert('An error occurred while updating.');
            }
        });
    });
});
    </script>




}

